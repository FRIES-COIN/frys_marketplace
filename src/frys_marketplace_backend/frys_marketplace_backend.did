type Collection = record {
  id : nat64;
  creator : principal;
  name : text;
  created_at : nat64;
  nft_count : nat64;
};
type NFT = record {
  id : nat64;
  price_in_icp_tokens : nat64;
  minter_principal_id : principal;
  collection_id : nat64;
  created_at : nat64;
  nft_description : text;
  nft_image : vec blob;
};
type Result = variant { Ok : Collection; Err : text };
type Result_1 = variant { Ok; Err : text };
type Result_2 = variant { Ok : NFT; Err : text };
type Result_3 = variant { Ok : bool; Err : text };
type TokenType = variant { ICP; CKBTC };
service : () -> {
  create_collection : (text) -> (Result);
  delete_nft : (nat64) -> (Result_1);
  get_all_collections : () -> (vec Collection) query;
  get_all_nfts : () -> (vec NFT) query;
  get_collection_nfts : (nat64) -> (vec NFT) query;
  get_nft_by_id : (nat64) -> (opt NFT) query;
  mint_nft : (vec blob, nat64, text, nat64, text) -> (Result_2);
  payment : (text, float64, TokenType) -> (text);
  verify_frys_payment : (nat64, nat64) -> (Result_3);
  who_am_i : () -> (principal);
}
